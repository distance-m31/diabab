# Build stage
FROM node:21 AS build-stage
# We need to set the backend API URL as an environment variable
# for the build process to be able to use it
ARG VITE_API_URL
ENV VITE_API_URL=$VITE_API_URL

WORKDIR /usr/src/app

# Copy both client and server to the build container
COPY . .

# Install client packages
WORKDIR /usr/src/app/client
RUN npm ci
RUN echo > .env
RUN echo "VITE_API_URL=$VITE_API_URL" >> .env

#RUN --mount=type=secret,id=VITE_API_URL \
#    echo "VITE_API_URL=$(cat /run/secrets/VITE_API_URL)" >> .env
RUN cat .env

# Install server packages
WORKDIR /usr/src/app/server
RUN npm ci

# Build both client and server according to the build script in package.json
WORKDIR /usr/src/app
RUN npm run build

# Production stage
FROM node:21 AS production-stage

ARG SECRET
ENV SECRET=$SECRET
ARG PORT
ENV PORT=$PORT
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL
ENV NODE_ENV=production

WORKDIR /usr/src/app
COPY  --from=build-stage /usr/src/app/server/build .
COPY  --from=build-stage /usr/src/app/server/package.json .
COPY  --from=build-stage /usr/src/app/server/package-lock.json .
COPY  --from=build-stage /usr/src/app/server/prisma ./prisma
RUN npm ci

RUN echo > .env
RUN --mount=type=secret,id=SECRET \
    echo "SECRET=$SECRET" >> .env
RUN --mount=type=secret,id=PORT \
    echo "PORT=$PORT" >> .env
RUN --mount=type=secret,id=DATABASE_URL \
    echo "DATABASE_URL=$DATABASE_URL" >> .env
RUN --mount=type=secret,id=NODE_ENV \
    echo "NODE_ENV=$NODE_ENV" >> .env

# RUN --mount=type=secret,id=SECRET \
#     echo "SECRET=$(cat /run/secrets/SECRET)" >> .env
# RUN --mount=type=secret,id=PORT \
#     echo "PORT=$(cat /run/secrets/PORT)" >> .env
# RUN --mount=type=secret,id=DATABASE_URL \
#     echo "DATABASE_URL=$(cat /run/secrets/DATABASE_URL)" >> .env
# RUN --mount=type=secret,id=NODE_ENV \
#     echo "NODE_ENV=$(cat /run/secrets/NODE_ENV)" >> .env

RUN cat .env

EXPOSE ${PORT}
RUN chown -R node /usr/src/app
USER node

RUN npx prisma generate
RUN npx prisma migrate deploy
CMD ["npm", "run", "start"]
