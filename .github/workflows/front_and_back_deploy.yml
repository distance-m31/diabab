name: Deploy a diabetes insuline app

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: "10.0.2.10:32000"
  IMAGE_NAME: "diabapp"
  NAMESPACE: "redamix"
  DOCKERFILE: "./Dockerfile.prod"
  DOCKERCONTEXT: "."
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  TAG: "v1.0"
jobs:
  build-and-push-image:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set current date to tag the built image with
        id: version
        run: echo "builddate=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build docker image
        #run: "docker build --no-cache -f ${{ env.DOCKERFILE }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }} ${{ env.DOCKERCONTEXT }}"
        run: >
          docker build --no-cache  
          --build-arg "VITE_API_URL=${{ secrets.VITE_API_URL }}"
          --build-arg "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}"
          --build-arg "SECRET=${{ secrets.SECRET }}"
          --build-arg "PORT=${{ secrets.PORT }}"
          --build-arg "NODE_ENV=production"
          -f ${{ env.DOCKERFILE }}
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} ${{ env.DOCKERCONTEXT }}

      - name: Push docker image to registry
        #run: "docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }}"
        run: "docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and push docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ env.DOCKERCONTEXT }}
      #     file: ${{ env.DOCKERFILE }}
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
      #     secrets: |
      #       "VITE_API_URL=${{ secrets.VITE_API_URL }}"
      #       "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}"
      #       "SECRET=${{ secrets.SECRET }}"
      #       "PORT=${{ secrets.PORT }}"
      #       "NODE_ENV=production"

  deploy:
    runs-on: self-hosted
    needs: build-and-push-image
    steps:
      - name: Deploy App
        uses: actions-hub/kubectl@master
        with:
          args: apply -f deployment.yml -f service.yml
          #kubeconfig: ${{ env.KUBE_CONFIG }}

      #     - name: Build docker image
      #   #run: "docker build --no-cache -f ${{ env.DOCKERFILE }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }} ${{ env.DOCKERCONTEXT }}"
      #   run: "docker build --no-cache -f ${{ env.DOCKERFILE }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} ${{ env.DOCKERCONTEXT }}"

      # - name: Push docker image to registry
      #   #run: "docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }}"
      #   run: "docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"

      # # - name: Rollout restart MyApp deployment with new version
      # #   run: "microk8s kubectl set image deployment/${{ env.IMAGE_NAME }}-deployment ${{ env.IMAGE_NAME }}=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }} -n ${{ env.NAMESPACE }} --record"
