name: Deploy a diabetes insuline app

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: "diabapp"
  REGISTRY: "ghcr.io/distance-m31"
  DOCKERFILE: "./Dockerfile-with-env"
  DOCKERCONTEXT: "."
  TAG: "v1.0"
jobs:
  build-and-push-image:
    #runs-on: self-hosted
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set current date to tag the built image with
        id: version
        run: echo "builddate=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: Create client .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_API_URL: ${{ secrets.VITE_API_URL }}
          directory: client
          file_name: .env

      - name: Create server .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
          envkey_SECRET: ${{ secrets.SECRET }}
          envkey_PORT: ${{ secrets.PORT }}
          envkey_NODE_ENV: "production"
          directory: server
          file_name: .env

      - name: Build and publish Docker image with multiple tags
        uses: VaultVulp/gp-docker-action@1.6.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
          image-name: ${{ env.IMAGE_NAME }} # Provide Docker image name
          #image-tag: ${{ env.TAG }} # if ommitted will be replaced with "latest"
          image-tag: ${{ steps.version.outputs.builddate }}
          #   #run: "docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.builddate }}"

          dockerfile: ${{ env.DOCKERFILE }} # Provide Dockerfile path

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      # - name: Deploy to Render
      #   uses: gh-actions-workflows/deploy-docker-render@v1.1
      #   with:
      #     deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
      #     image-url: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
      #     render-api-key: ${{ secrets.RENDER_API_KEY }}
      #     wait-for-deployment: true
      - name: Deploy to Render
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl "$deploy_url"
